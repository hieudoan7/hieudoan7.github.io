<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bes on hieudoan7</title>
    <link>https://hieudoan7.github.io/be/</link>
    <description>Recent content in Bes on hieudoan7</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Oct 2022 16:21:42 +0700</lastBuildDate>
    
	<atom:link href="https://hieudoan7.github.io/be/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My working tools across computer</title>
      <link>https://hieudoan7.github.io/be/working_tools/</link>
      <pubDate>Sat, 01 Oct 2022 16:21:42 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/be/working_tools/</guid>
      <description>I&amp;rsquo;ve been working for more than 2 years. It&amp;rsquo;s quite a long time but still i don&amp;rsquo;t have an personal toolbox of developing. On this special day, the day I&amp;rsquo;m preparing to leave my second job, gonna sit down and write about all the tools I have used in software development. Here we go!!!
1. Git   Command line
use .oh-my-zsh to levarage of nice git command alias
  Smart git</description>
    </item>
    
    <item>
      <title>Setting up Gitlab CI for Golang Project</title>
      <link>https://hieudoan7.github.io/be/gitlab_ci/</link>
      <pubDate>Sun, 21 Aug 2022 09:30:07 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/be/gitlab_ci/</guid>
      <description>After searching how to set up gitlab CI for my golang project for a while (probably 1.5 day). I wanna take some note here to save your time.
The flow is basically talking to gitlab API.
The step is:
1. Get the output
Either from gitlab runner log or artifact
with Golang, It is the output from command: go test ./...
2. Config the regex for gitlab CI to parse the output from all runner</description>
    </item>
    
    <item>
      <title>Basic Git Knowledge</title>
      <link>https://hieudoan7.github.io/be/git_tutorial/</link>
      <pubDate>Fri, 08 Oct 2021 20:54:38 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/be/git_tutorial/</guid>
      <description>Doing the job of a developer, we work with Git on daily basic and sometime we just feel fine and go on with some basic git flow. Have you ran into a git problem and hesitate to make any further steps to fix it? I think Git problem is something we cannot avoid, so why don&amp;rsquo;t we spend a little time to dive deeply into it? Let&amp;rsquo;s get started. Before we can imagine on different scenarios, let&amp;rsquo;s take a look at some basic stuff.</description>
    </item>
    
    <item>
      <title>[web] SSL/TLS Certificate</title>
      <link>https://hieudoan7.github.io/be/ssl_cert/</link>
      <pubDate>Sun, 18 Jul 2021 09:59:19 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/be/ssl_cert/</guid>
      <description>SSL/TLS Certificate Explanation 18/07/2021
After spending a few days researching the SSL/TLS certificate, I want to take a note for myself and show what I have understood in this blog post. Leave a comment if you have any disagreements or concerns about this topic.
I. What is SSL Certificate? First, SSL is the abbreviation of Secure Socket Layer and TLS is the abbreviation of Transport Layer Security which is the upgradation of SSL.</description>
    </item>
    
    <item>
      <title>Linux Useful Commands</title>
      <link>https://hieudoan7.github.io/be/useful_command/</link>
      <pubDate>Thu, 25 Feb 2021 09:50:59 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/be/useful_command/</guid>
      <description>Useful Command Lines 25/02/2021
I. Cat Read a text-like file
Example:
1$ cat file.txt | grep &amp;#34;pattern&amp;#34; | -A number_of_after_line -B number_of_before_line -C both_before_and_after_lines II. Find Find one or more files base on pattern
 return all the file and directory locate in a dir  1$ find ~/Hd7/  return only file (or dir)  1$ find ~/Hd7/ -type f or
1$ find ~/Hd7/ -type d  return a file with specific name  1$ find .</description>
    </item>
    
  </channel>
</rss>