<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Interviews on hieudoan7</title>
    <link>https://hieudoan7.github.io/interview/</link>
    <description>Recent content in Interviews on hieudoan7</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 28 Mar 2022 20:07:15 +0700</lastBuildDate>
    
	<atom:link href="https://hieudoan7.github.io/interview/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Traverse a Tree Recursively and Iteratively</title>
      <link>https://hieudoan7.github.io/interview/tree_traversal/</link>
      <pubDate>Mon, 28 Mar 2022 20:07:15 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/interview/tree_traversal/</guid>
      <description>In this article, I&amp;rsquo;m going to represent the algorithm of traversing a tree in every orders in both recursive way and especially iterative way.
To put it simply, the iterative way, we will you stack (only 1 stack) to simulate the process.
Assuming that the tree structure is as below:
1struct Node { 2	int value; 3	Node* left; 4	Node* right; 5	Node (int val) { 6	this-&amp;gt;value = val; 7	this-&amp;gt;left = this-&amp;gt;right = NULL; 8	} 9}; 1.</description>
    </item>
    
    <item>
      <title>Database</title>
      <link>https://hieudoan7.github.io/interview/database/</link>
      <pubDate>Thu, 03 Mar 2022 10:31:00 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/interview/database/</guid>
      <description>book: Beginning database design solution (Rod Stephens)</description>
    </item>
    
    <item>
      <title>Common Operating System Questions</title>
      <link>https://hieudoan7.github.io/interview/os_qa/</link>
      <pubDate>Fri, 25 Feb 2022 20:35:40 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/interview/os_qa/</guid>
      <description>1. What do you mean by an operating system? What are its function? 2. binary semaphore vs. mutex signal mechanism vs. locking mechanism
  mutex mutual exclusion object, used for protecting critical resource only the owner process can release the mutex
  binary semaphore wait() and signal() //using signaling mechanism hey, i&amp;rsquo;m done, you can carry on wait() and singal() is totally decoupled you can wait() (decrement) on Process B and signal() on process A (increment) semaphore: integer indicating number of &amp;ldquo;toilets&amp;rdquo; available mutex: object acts like a key</description>
    </item>
    
    <item>
      <title>On the way to SEA VN</title>
      <link>https://hieudoan7.github.io/interview/sea/</link>
      <pubDate>Mon, 13 Jan 2020 18:41:14 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/interview/sea/</guid>
      <description>On the way to SEA VN 13/01/2020
Hôm nay mình rảnh nhân dịp nghỉ tết (19 âm lịch rồi) nên viết lại một chút quá trình phỏng vấn SEA VN để lưu lại, cũng như biết đâu giúp được 1 số bạn.
Quá trình phỏng vấn bao gồm 4 rounds
 Round 0: Làm bài test trên giấy Round 1: Face to Face technical interview 1 Round 2: Face to Face technical interview 2 Round 3: Yes/no round (:v)  I.</description>
    </item>
    
    <item>
      <title>Operator System</title>
      <link>https://hieudoan7.github.io/interview/operator_system/</link>
      <pubDate>Tue, 29 Oct 2019 23:11:03 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/interview/operator_system/</guid>
      <description>Operator System Questions for Interview 29/10/2019
Hệ điều hành là 1 chương trình quản lý phần cứng và cấp phát tài nguyên một cách phù hợp cho các chương trình.
I. Process (Tiến trình) 1. Tiến trình, tiểu trình? Tiến trình là một chương trình máy tính đang thực thi.
Tiểu trình (thread) là một đơn vị thực thi độc lập mà CPU có thể điều phối được. Thông thường, một Tiến trình gồm nhiều Tiểu trình.</description>
    </item>
    
    <item>
      <title>Computer Network</title>
      <link>https://hieudoan7.github.io/interview/computer_network/</link>
      <pubDate>Mon, 28 Oct 2019 21:27:43 +0700</pubDate>
      
      <guid>https://hieudoan7.github.io/interview/computer_network/</guid>
      <description>Computer Network Questions for Interview. 28/10/2019
1. DNS là gì, hoạt động như thế nào? DNS là Domain Name System: Hệ thống chuyển đổi domain name thành địa chỉ IP.
host: yahoo.com -&amp;gt; search catch -&amp;gt; miss -&amp;gt; Resolver (ISP or nhà cc mạng: VIETEL (người đại diên)) -&amp;gt; ROOT server -&amp;gt; .com server -&amp;gt; yahoo.com server -&amp;gt; đưa cho 1 IP server (rảnh) để mà về tải. Remark: DNS using port 53.</description>
    </item>
    
  </channel>
</rss>